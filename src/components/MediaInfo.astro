---
import type { CollectionEntry } from 'astro:content';
import { Icon } from 'astro-icon/components';

export interface Props {
  mediaEntry: CollectionEntry<'media'>;
  context: "page" | "gallery";
}

const { mediaEntry, context } = Astro.props;

// Helper: is image URL?
function isImage(url?: string): boolean {
  if (!url) return false;
  return /\.(jpe?g|png|gif|webp|svg|bmp|avif)(\?.*)?$/i.test(url);
}

function formatTag(tag: string): string {
  if (!tag) return '';
  const cleaned = tag.replace('media/', '');
  return cleaned;
}

const tagsToRemove: string[] = ['type/notes'];
const conceptTags: string[] = [];
const otherTags: string[] = [];

[...mediaEntry.data.tags].map(formatTag).forEach(tag => {
  if (tag.startsWith('concept/')) {
    conceptTags.push(tag.replace('concept/', ''));
  } else if (!tagsToRemove.includes(tag)) {
    otherTags.push(tag);
  }
});
otherTags.push(mediaEntry.data.format);

function getFormatIcon(format: string) {
  switch (format) {
    case "print":
    case "e-book":
    case "audiobook":
      return "mdi--book-open-page-variant";
    case "article":
      return "mdi--file-text-multiple";
    case "podcast":
      return "mdi--podcast";
    default:
      return "mdi--book-open-page-variant";
  }
}
const format = Array.isArray(mediaEntry.data.format)
  ? mediaEntry.data.format[0]
  : mediaEntry.data.format;
const formatIcon = getFormatIcon(format);

function formatDate(date: Date): string {
  const newDate = new Date(date);
  const year = newDate.getFullYear();
  const month = String(newDate.getMonth() + 1).padStart(2, '0');
  const day = String(newDate.getDate()).padStart(2, '0');
  return `${year}/${month}/${day}`;
}
---

<!-- Container: flex-row on md+, flex-col on small screens, rounded, shadow, etc -->
<div class={`media-info rounded-xl bg-surface-1 px-6 py-4  mx-auto
            flex flex-col md:flex-row items-stretch
            ${context==="page" ? "max-w-7/8 gap-4 md:gap-8" : "w-full gap-2 md:gap-4"}`}>

  <!-- TOP ROW: left column, image, always vertically centered in its flex spot -->
  <div class="flex justify-center md:items-center md:h-auto sm:min-h-[120px] ">
    {mediaEntry.data.link_to_source ? (
      isImage(mediaEntry.data.link_to_source)
        ? (
          <img
            src={mediaEntry.data.link_to_source}
            alt={`cover for ${mediaEntry.data.title}`}
            class={`h-auto my-auto ${context==="page" ? "max-w-40 lg:max-w-50" : "max-w-20"}`}
            class="max-w-40 lg:max-w-50"
          />
        ) : (
          <a
            href={mediaEntry.data.link_to_source}
            target="_blank"
            rel="noopener"
            class="inline-flex items-center justify-center rounded-full p-2 focus-outline-rounded"
            aria-label={`source for ${mediaEntry.data.title}`}
          >
            <Icon name={formatIcon} class="w-8 sm:w-16 h-auto text-content-3 hover:text-content-2 soft-transition" />
          </a>
        )
    ) : (
      <span class="inline-flex items-center justify-center rounded-full p-2">
        <Icon name={formatIcon} class="w-16 h-16 text-surface-4" />
      </span>
    )}
  </div>

  <!-- Info box: right side for desktop, below image for mobile -->
  <section class="flex flex-col justify-center w-full">
      <div class="flex flex-col justify-center">
         {mediaEntry.data.year_published && context==="page" ?
          <p class={`font-heading text-content-1 text-center ${context==="page" ? "text-lg font-semibold" : "text-base font-light"}`}>
            <span class="italic">{mediaEntry.data.title}</span> ({mediaEntry.data.year_published})
          </p>
          :
          <p class={`font-heading text-content-1 italic text-center ${context==="page" ? "text-lg font-semibold" : "text-base font-light"}`}>
            {mediaEntry.data.title}
          </p>
        }
        {mediaEntry.data.subtitle && context==="page" ? (
          <p class={`font-heading text-base text-content-2 italic text-center ${context==="page" ? "font-semibold" : "font-light"}`}>
            {mediaEntry.data.subtitle}
          </p>
        ) : null}
        <p class={`font-base text-content-3 text-center ${context==="page" ? "font-semibold text-base" : "font-light text-sm"}`}>
          {mediaEntry.data.author}
        </p>

        {context==="gallery" && (<a
          href={`/media/${mediaEntry.id}`}
          target="_blank"
          rel="noopener"
          class="inline-flex items-center justify-center rounded-full p-2 focus-outline-rounded"
          aria-label={`source for ${mediaEntry.data.title}`}
        >
          <Icon name="mdi--more-circle-outline" class="w-4 md:w-6 h-auto text-content-4 hover:text-content-2 soft-transition" />
        </a>)}
      </div>  

       
    <!-- Tag area: inline on sm, vertical on md+ -->
    {context==="page" && (<div 
      class="mt-4 flex flex-wrap gap-2 justify-center align-center text-center mx-6 
            flex-row md:flex-col md:items-center md:gap-3"
    >
      <div>
        <span class="font-header font-semibold text-sm text-content-4 py-1"> rating</span>
        <span class="rounded-full bg-surface-2 hover:bg-surface-3 px-2 py-1 mx-1 font-base text-sm text-content-3 hover:text-content-2 soft-transition uppercase">
          {mediaEntry.data.rating}
        </span>
      </div>
      <div>
        <span class="font-header font-semibold text-sm text-content-4 py-1">type</span>
        {otherTags.map(t => (
          <span class="rounded-full bg-surface-2 hover:bg-surface-3 px-2 py-1 mx-1 font-base text-sm text-content-3 hover:text-content-2 soft-transition uppercase">
            {t}
          </span>
        ))}
      </div>
      {conceptTags.length > 0 && (<div>
        <span class="font-header font-semibold text-sm text-content-4 py-1">concepts</span>
        {conceptTags.map(t => (
          <span class="rounded-full bg-surface-2 hover:bg-surface-3 px-2 py-1 mx-1 font-base text-sm text-content-3 hover:text-content-2 soft-transition uppercase">
            {t}
          </span>
        ))}
      </div>)}
    </div>)}

    <!-- Commentary: full width on small screens below, inside section on md+ -->
    {context==="page" && (<div class="w-full">
      {mediaEntry.data.commentary && (
        <div 
          class="text-content-1 font-base text-sm font-light mt-4 p-4 rounded-lg bg-surface-2 overflow-y-auto overscroll-auto
          max-h-32 md:max-h-60"
        >
          <span class="font-semibold font-mono text-content-3 pr-2">{formatDate(mediaEntry.data.relevant_date)}</span>
          {mediaEntry.data.commentary}
        </div>
      )}
    </div>)}
  </section>
</div>