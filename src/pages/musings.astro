---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

const titleShort = "notebook";
const titleFull = "notebook";

// load collection and sort by date 
const notebook = (await getCollection('notebook')).sort((a, b) => {
  return (new Date(b.data.created) > new Date(a.data.created) ? 1 : -1)
});

// filter to musings
const notebookFiltered = notebook.filter(item => 
  ('musings_edition' in item.data)
);

// format and organize tags:
function removePrefix(tag: string, prefix: string): string {
  if (!tag) return '';
  if (tag.startsWith(prefix + '/')) {
    return tag.substring(prefix.length + 1);
  }
  return tag;
}

const tagsToRemove: string[] = []; // Add tags to remove if needed

const notebookProcessed = notebookFiltered.map(item => {
  const tags: string[] = item.data.tags ?? [];
  const typeTags: string[] = [];
  const contentTags: string[] = [];

  for (const tag of tags) {
    // skip tags to remove
    if (tagsToRemove.includes(tag)) continue;

    if (tag.startsWith('journal/')) {
      typeTags.push(removePrefix(tag, 'journal'));
    } else if (tag.startsWith('media/')) {
      typeTags.push(removePrefix(tag, 'media'));
    } else if (tag.startsWith('value/')) {
      contentTags.push(removePrefix(tag, 'value'));
    } else if (tag.startsWith('concept/')) {
      contentTags.push(removePrefix(tag, 'concept'));
    }
  }

  return {
    ...item,
    data: {
      ...item.data,
      typeTags,
      contentTags,
    }
  };
});

function formatDate(date: Date): string {
  const newDate = new Date(date);
  const year = newDate.getFullYear();
  const month = String(newDate.getMonth() + 1).padStart(2, '0');
  const day = String(newDate.getDate()).padStart(2, '0');
  return `${year}/${month}/${day}`;
}

---

<BaseLayout titleShort={titleShort} titleFull={titleFull}>
  <p class="pb-0 text-content-1 text-center"> (musings, updates, and other such words on what i've been reading / listening to lately) </p>
  <p class="pb-6 text-content-2">
    sign up 
      <a
        class="font-semibold text-content-3 hover:text-content-4 hover:scale-103 soft-transition focus-outline-rounded"
        href="https://airtable.com/appGBfUyNL8QylEWG/shrbJMCacQzWPrCLY"
        target="_blank">
        here
      </a>
      to receive sporadic musings in your inbox
  </p>

  
  {notebookFiltered.map(item => (
    <span class="inline-flex align-baseline">
      <p class="text-content-2 pr-2 font-semibold">#{item.data.musings_edition}</p>
      <a
        href={`/notebook/${item.id}`}
        rel="noopener"
        class="inline-flex items-center justify-center font-base font-light lowercase text-content-3 hover:text-content-2 hover:font-semibold soft-transition focus-outline-rounded"
        aria-label={`source for ${item.data.title}`}
      >
        {item.data.title}
      </a>
      <p class="font-mono text-sm my-auto text-content-4 pl-4 font-semibold">{formatDate(item.data.created)}</p>
    </span>
  ))}

</BaseLayout>